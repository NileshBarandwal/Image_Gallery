{"version":3,"sources":["index.js","Hello.js"],"names":["name","className","imageData","i","randomImageIndex","Math","floor","random","randomCollectID","push","src","MissingImage","axios","require","ReactImageFallbackContainer","props","CONTAINER_ID","uuidv1","id","download","onClick","e","url","target","method","mode","cache","credentials","headers","redirect","responseType","then","response","fileURl","window","URL","createObjectURL","Blob","data","fileLink","document","createElement","href","setAttribute","body","appendChild","click","ImageComponent","fallbackImage","initialImage","alt","onError","checkImage","img","Promise","resolve","reject","image","Image","onload","onerror","App","componentDidMount","a","validImages","promises","map","all","console","log","catch","promise","error","setState","prevState","delayedCallback","_","debounce","event","value","handleInputChange","persist","handleClick","count","state","alert","Hello","this","length","key","Component","render","getElementById"],"mappings":"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","file":"static/js/main.645cddea.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport _ from 'lodash';\nimport uuidv1 from 'uuid/v1';\nimport Hello from './Hello';\nimport './style.css';\nimport ReactImageFallback from 'react-image-fallback';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst imageData = [];\n\nconst numItemsToGenerate = 30; //how many gallery items you want on the screen\nconst numImagesAvailable = 10; //how many total images are in the collection you are pulling from\nconst imagesize = 100; //your desired image width in pixels\nconst collectionID = 500; //the collection ID from the original url\n\nfor (let i = 0; i < numItemsToGenerate; i++) {\n  let randomImageIndex = Math.floor(Math.random() * numImagesAvailable);\n  let randomCollectID = Math.floor(Math.random() * collectionID);\n  if (i % 2 === 0) {\n    //push fake\n    imageData.push({\n      src: `https://localhost:80/breakimg.jpg`\n    })\n\n  }\n  \n  imageData.push({\n    src: `https://app.pixelencounter.com/api/basic/svgmonsters/${randomCollectID}/image/png?fillType=${randomImageIndex}&size=${imagesize}`\n  })\n\n  // https://app.pixelencounter.com/api/basic/svgmonsters/2000/image/png?fillType=3&size=100\n\n}\n\nconst MissingImage = () => {\n  return null;\n}\n\nconst axios = require('axios')\n\nconst download = e => {\n  // console.log(e.target.href);\n  // fetch(e.target.href, {\n  //   method: \"GET\",\n  //   headers: {},\n  //   responseType:'blob',\n  //   mode:'no-cors'\n  // })\n  //   .then(response => {\n  //     response.arrayBuffer().then(function(buffer) {\n  //        var fileURl = window.URL.createObjectURL(new Blob([response.data]))\n  //               var fileLink = document.createElement('a');\n  //               fileLink.href = fileURl;\n  //               fileLink.setAttribute('download','image.png');\n  //               document.body.appendChild(fileLink);\n  //               fileLink.click();\n  //     });\n  //   })\n  //   .catch(err => {\n  //     console.log(err);\n  //   });\n\n  //#######################\n  axios({\n    url:'https://cors-anywhere.herokuapp.com/'+e.target.src,\n    method:'GET',\n    mode: 'cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin' : '*',\n    'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS'\n    },\n    redirect: 'follow', // manual, *follow, error\n    responseType:'blob',\n}).then((response) => {\n    var fileURl = window.URL.createObjectURL(new Blob([response.data]))\n    var fileLink = document.createElement('a');\n    fileLink.href = fileURl;\n    fileLink.setAttribute('download','image.png');\n    document.body.appendChild(fileLink);\n    fileLink.click();\n})\n\n//##############################\n}\n\nconst ReactImageFallbackContainer = (props) => {\n\n  const CONTAINER_ID = uuidv1();\n  // console.log('render');\n  // console.log(props);\n  return (<div id={`SymbolContainer_${CONTAINER_ID}`} className=\"col-3 my-2\">\n    <a download\n        onClick={e => download(e)}><img src={props.src} className=\"img-fluid\" /></a>\n    {\n      //  <ReactImageFallback {...props} />\n    }\n  </div>)\n}\n\nconst ImageComponent = ({ src }) => {\n  return <ReactImageFallbackContainer\n    src={src}\n    fallbackImage={<MissingImage />}\n    initialImage=\"https://loading.io/spinners/ellipsis/index.discuss-ellipsis-preloader.svg\"\n    alt=\"cool image should be here\"\n    className=\"img-fluid\"\n    onError={(e) => {\n      // console.log(document.querySelector(`#SymbolContainer_${i}`))\n      //document.querySelector(`#SymbolContainer_${CONTAINER_ID}`).remove()\n    }}\n  />\n\n}\nconst checkImage = (img) => {\n  // console.log('img', img.src)\n  return new Promise((resolve, reject) => {\n\n    let image = new Image();\n\n    image.onload = () => { resolve(img.src); }\n    image.onerror = () => { reject('one or more images could not load'); }\n    image.src = img.src;\n  })\n\n}\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: 'Image Gallery',\n      validImages: [],\n      count: 0\n    };\n  }\n\n  showAlert() {\n    alert(\"I'm an alert\");\n  }\n\n  componentDidMount = async () => {\n    const validImages = [];\n    let promises = imageData.map(checkImage);\n\n    await Promise.all(promises).then(response => {\n      console.log(response);\n\n    }).catch(e => {\n      console.log(e);\n    });\n\n\n    for (let promise of promises) {\n      await promise.then(response => {\n        validImages.push({\n          src: response\n        });\n      }).catch(error => {\n        //console.log(error);\n      })\n    }\n\n\n    this.setState(prevState => {\n      //console.log('set state');\n      return {\n        validImages: validImages\n      }\n    })\n\n\n\n    // for (var img of imageData) {\n    //   checkImage(img.src).then(response => {\n    //     console.log(response);\n    //     this.setState(prevState => {\n    //       return {\n    //         validImages: [\n    //           ...prevState.validImages,\n    //           {\n    //             src: response\n    //           }\n    //         ]\n    //       }\n    //     })\n    //   }).catch(e => {\n    //     console.log(e);\n    //   });\n    // }\n\n\n\n  }\n\n\n\n  delayedCallback = _.debounce(function (event) {\n    // `event.target` is accessible now\n    console.log(event.target.value)\n  }, 300);\n  handleInputChange = e => {\n\n    e.persist();\n    this.delayedCallback(e)\n  }\n\n  handleClick = () => {\n    this.setState(prevState => {\n      return {\n        count: prevState.count + 1\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Hello name={this.state.name} />\n        <p className=\"title\">\n          Click on image to Download :)\n        </p>\n        \n        {\n          //<input type=\"text\" onChange={this.handleInputChange} />\n        }\n        <div className=\"row\">\n          {\n            this.state.validImages.length ? (\n              this.state.validImages.map((img, i) => {\n                // if (checkImage(img.src)) {\n                return <ImageComponent key={`img_${i}`}  {...img} />\n                // }\n\n\n                // return null;\n              })\n            )\n              : (\n                <div className=\"card-title col-12 card\">\n\n                  <img className=\"loading\" src=\"https://c.tenor.com/BtC0jVjzYToAAAAC/loading-chain.gif\" />\n                  \n                </div>\n                \n              )\n\n          }  </div>\n        <br />\n        good images: {this.state.validImages.length} / {imageData.length}\n        <br />\n\n        <button onClick={this.handleClick}>Add {this.state.count}</button>\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n","import React from 'react';\n\nexport default ({ name }) => <h1 className=\"title\">{name}!</h1>;\n\n\n"],"sourceRoot":""}